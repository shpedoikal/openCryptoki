
TPM STDLL README
Kent Yoder <shpedoikal@gmail.com>

Current architecture:

 SRK
 |
 + User Root Key (URK)
 | |
 | + [1..N] User Base Key (UBK)
 |          |
 |          + Migratable Leaf Key (MLK)
 |          | |
 |          | + Auth Data for User Created Keys
 |          |
 |          + [1..N] User Created Keys
 |
 + Migratable Root Key (MRK)
   |
   + Migratable Leaf Key (MLK)


1. When the SO logs in:
  A) its verified that she is root (currently commented out)
  B) the token searches for the User Root Key (URK), and if found, the SO's key
     chain is loaded, up to the SO's protection key.  
     Some junk data is encrypted and decrypted to challenge the auth data 
     passed in and if that test passes, the SO is logged in
  C) if the URK isn't found, its assumed that the SO is logging in for the
     first time, and
	i. The URK is generated in software
	ii. The URK's private key is wrapped with the public key of the SRK,
	    and TSS and PKCS#11 objects are created for it, storing it in 
	    the PKCS#11 data store
  D) i and ii are repeated for the Migratable Root Key (MRK)
  E) The Protection Key is generated by the TPM as a child of the MRK
  F) Some junk data is encrypted and decrypted to challenge the auth data
     passed in and if that test passes, the SO is logged in

2. When the USER logs in:
  A) The URK is searched for and if not found, failure (The SO has not
     initialized the token)
  B) If the URK is found, the User's Base Key (UBK) is searched for and if found,
     the user's key chain is loaded, up to the USER's protection key.  Some junk
     data is encrypted and decrypted to challenge the auth data passed in and if
     that test passes, the USER is logged in
  C) if the UBK is not found:
	i. The UBK is generated in software
	ii.The UBK's private key is wrapped with the public key of the URK, and
	   TSS and PKCS#11 objects are created for it, storing it in the PKCS#11
	   data store
	D) The User's Protection Key is generated by the TPM as a child of the UBK
	E) Some junk data is encrypted and decrypted to challenge the auth data
	   passed in and if that test passes, the USER is logged in


Prior to release 2.4.1, the tpm stdll has the password for the SRK
hardcoded to NULL and the policy secret mode set to TSS_SECRET_MODE_PLAIN. 

Starting in release 2.4.1, the environment variables, 
OCK_SRK_SECRET and OCK_SRK_MODE can be set to indicate the 
Secret Root Key and the policy secret mode to the tpm stdll.

OCK_SRK_MODE
The possible secret modes are:
	- TSS_SECRET_MODE_NONE
	- TSS_SECRET_MODE_PLAIN
	- TSS_SECRET_MODE_SHA1
	- TSS_SECRET_MODE_POPUP
	- TSS_SECRET_MODE_CALLBACK

OCK_SRK_SECRET
The secret root key may be:
	- TSS_WELL_KNOWN_SECRET to indicate the well known secret.
	  i.e. export OCK_SRK_SECRET="TSS_WELL_KNOWN_SECRET"
	  OCK_SRK_MODE is not required when srk is well known secret.
	
	- a text string.	
	  i.e. export OCK_SRK_SECRET="MyBigSecret"
	  If OCK_SRK_MODE is not set, then by default it will be set to 
	  TSS_SECRET_MODE_PLAIN.

	- SHA1 hash.
	  Requires that OCK_SRK_MODE is set to TSS_SECRET_MODE_SHA1 to
	  indicate the string is a sha1 hash.
	  i.e. export OCK_SRK_SECRET="22596363b3de40b06f981fb85d82312e8c0ed511"
	       export OCK_SRK_MODE=TSS_SECRET_MODE_SHA1

			
If neither OCK_SRK_MODE nor OCK_SRK_SECRET are set, then
the passwd will be set to NULL, and the mode to TSS_SECRET_MODE_PLAIN.
